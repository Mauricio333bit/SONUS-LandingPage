---
import NotaSlide from '../components/NotaSlide.astro';
import BrandSlide from './BrandSlide.astro'
---
<section id="jobs-gallery" class="bg-gray-800">
    <div class="container-jobsGallery" >
      <div class="cs-content ">
        <div class="cs-flex">
          <span class="text-5xl font-bold text-[--primary]">GALLERY</span>
          <h2 class="text-white text-5xl font-extrabold">Some work from our previous clients</h2>
        </div>
        <div class="cs-button-group">
          <button class="cs-button" data-filter="one"><span class="text-9xl font-extrabold">-</span>
          </button>
          <button class="cs-button" data-filter="two">
            <span class="text-9xl font-extrabold">-</span>
          </button>
          <button class="cs-button" data-filter="three">
            <span class="text-9xl font-extrabold">-</span>
          </button>
        </div>
      </div>
      <!--Gallery 1-->
      <div class="cs-gallery" data-category="one">
        <!--Picture 1-->
        <picture class="cs-image">
         
          <img
            loading="lazy"
            decoding="async"
            src="/jobsGallery1.jpeg"
            alt="gallery"
            
          />
        </picture>
        <!--Picture 2-->
        <picture class="cs-image">
        <video src="/jobsVideo1.mp4"  controls></video>
        <div class="play-button"></div>
        </picture>
        <!--Picture 3-->
        <picture class="cs-image">
          <source media="(max-width: 600px)" srcset="/bath.webp" />
          <source media="(min-width: 601px)" srcset="/bath.webp" />
          <img
            loading="lazy"
            decoding="async"
            src="/bath.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
        <!--Picture 4-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/academyLAJob3.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/academyLAJob3.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/academyLAJob3.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
        <!--Picture 5-->
        <picture class="cs-image">
          <video src="/jobsVideo3.mp4"  controls></video>
          <div class="play-button"></div>
        </picture>
        <!--Picture 6-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/academyLaJob4.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/academyLaJob4.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/academyLaJob4.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
      </div>
      <!--Gallery 2-->
      <div class="cs-gallery cs-hidden" data-category="two">
        <!--Picture 4-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/academyLAJob1.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/academyLAJob1.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/academyLAJob1.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
        <!--Picture 2-->
        <picture class="cs-image">
          <video src="/jobsVideo4.mp4"  controls></video>
          <div class="play-button"></div>
        </picture>
        <!--Picture 3-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/academyLAJob3.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/academyLAJob3.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/academyLAJob3.webp"
            alt="gallery"
            width="630"
            height="400"
          />
        </picture>
        <!--Picture 4-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/academyLaJob4.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/academyLaJob4.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/academyLaJob4.webp"
            alt="gallery"
            width="630"
            height="400"
          />
        </picture>
        <!--Picture 5-->
        <picture class="cs-image">
          <video src="/jobsVideo6.mp4"  controls></video>
          <div class="play-button"></div>
        </picture>
        <!--Picture 6-->
        <picture class="cs-image">
          <source
            media="(max-width: 600px)"
            srcset="/funktionSist3.webp"
          />
          <source
            media="(min-width: 601px)"
            srcset="/funktionSist3.webp"
          />
          <img
            loading="lazy"
            decoding="async"
            src="/funktionSist3.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
      </div>
      <!--Gallery 3-->
      <div class="cs-gallery cs-hidden" data-category="three">
        <!--Picture 1-->
        <picture class="cs-image">
          <source media="(max-width: 600px)" srcset="/bath4.webp" />
          <source media="(min-width: 601px)" srcset="/bath4.webp" />
          <img
            loading="lazy"
            decoding="async"
            src="/bath4.webp"
            alt="gallery"
            width="305"
            height="400"
          />
        </picture>
        <!--Picture 2-->
        <picture class="cs-image">
          <video src="/jobsVideo9.mp4"  controls></video>
          <div class="play-button"></div>
        </picture>
        <!--Picture 3-->
        <picture class="cs-image">
          <source media="(max-width: 600px)" srcset="/bath2.webp" />
          <source media="(min-width: 601px)" srcset="/bath2.webp" />
          <img
            loading="lazy"
            decoding="async"
            src="/bath2.webp"
            alt="gallery"
            width="630"
            height="400"
          />
        </picture>
        <!--Picture 4-->
        <picture class="cs-image">
          <source media="(max-width: 600px)" srcset="/bath3.webp" />
          <source media="(min-width: 601px)" srcset="/bath3.webp" />
          <img
            loading="lazy"
            decoding="async"
            src="/bath3.webp"
            alt="gallery"
            width="305"
            height="400"
            />
          </picture>
          <!--Picture 5-->
          <picture class="cs-image">
            <video src="/jobsVideo5.mp4"  controls></video>
            <div class="play-button"></div>
          </picture>
          <!--Picture 6-->
          <picture class="cs-image">
            <source media="(max-width: 600px)" srcset="/bath2.webp" />
            <source media="(min-width: 601px)" srcset="/bath2.webp" />
            <img
              loading="lazy"
              decoding="async"
              src="/bath2.webp"
              alt="gallery"
              width="305"
              height="400"
            />
          </picture>
      </div>
      
    </div>
    
  </section>
  <BrandSlide/>
  <div class="flex flex-col gap-8 justify-center text-center">
    <span class="text-5xl font-bold text-[--primary] pt-3 my-4">Featured reviews</span>
    
    <NotaSlide/>
    </div>

  <style>
    
/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #jobs-gallery {
    padding: var(--sectionPadding);
    overflow: hidden;
    position: relative;

    
  }
  #jobs-gallery .container-jobsGallery {
    width: 100%;
    /* changes to 1280px at tablet */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
    position: relative;
  }
  #jobs-gallery .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }

  #jobs-gallery .cs-title {
    max-width: 20ch;
    color: white;
  }
  #jobs-gallery .cs-button-group {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    row-gap: 0.5rem;
    column-gap: 2rem;
  }
  #jobs-gallery .cs-button {
    font-size: 2rem;
    line-height: 1.5em;
    color: white;
    background-color: transparent;
    border: none;
    transition: color 0.3s;
  }
  #jobs-gallery .cs-button:hover {
    color: var(--primary);
    cursor: pointer;
  }
  #jobs-gallery .cs-button.cs-active {
    color: var(--primary);
  }
  #jobs-gallery .cs-gallery {
    width: 100%;
    padding: 0;
    margin: 0;
    opacity: 1;
    visibility: visible;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    /* 16px - 20px */
    gap: clamp(1rem, 1.5vw, 1.25rem);
    transition: transform 0.7s, opacity 0.3s, visibility 0.5s, top 0.3s,
      left 0.3s;
    /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
    transform-origin: left top;
  }
  .play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 60px;
  height: 60px;
  background-image: url('/sonnusPlay.svg');
  background-size: cover;
  background-repeat: no-repeat;
  opacity: 0;
  transition: opacity 0.3s;
  cursor: pointer;
}

picture:hover .play-button {
  opacity: 1;
}
  #jobs-gallery .cs-gallery.cs-hidden {
    /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
    visibility: hidden;
    /* prevents the mouse from interacting with it */
    pointer-events: none;
    /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
    opacity: 0;
    /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .container-jobsGallery (left: 0). Same for the bottom:0 value, the gallery won't go past that position when it animates */
    bottom: 0;
    left: 0;
    position: absolute;
    /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
    transform: scaleY(0) scaleX(0);
  }
  #jobs-gallery .cs-gallery.cs-hidden .cs-image {
    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
    transform: translateY(2.1875rem);
    opacity: 0;
  }
  #jobs-gallery .cs-image {
    border-radius: 1.25rem;
    width: 47%;
    aspect-ratio: 1;
    /* clips the image corners */
    overflow: hidden;
    display: block;
    position: relative;
    /* when .cs-hidden is removed from the .cs-gallery, reset these values and animate between their hidden styles */
    transform: translateY(0rem);
    opacity: 1;
    transition: opacity 0.6s, transform 0.6s;
  }
  #jobs-gallery .cs-image:nth-of-type(1) {
    /* changes transition delays at desktop */
    /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
    transition-delay: 0.15s;
  }
  #jobs-gallery .cs-image:nth-of-type(2) {
    transition-delay: 0.3s;
  }
  #jobs-gallery .cs-image:nth-of-type(3) {
    transition-delay: 0.45s;
  }
  #jobs-gallery .cs-image:nth-of-type(4) {
    transition-delay: 0.6s;
  }
  #jobs-gallery .cs-image:nth-of-type(5) {
    transition-delay: 0.75s;
  }
  #jobs-gallery .cs-image:nth-of-type(6) {
    transition-delay: 0.9s;
  }
  #jobs-gallery .cs-image img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes it act like a background image */
    object-fit: cover;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #jobs-gallery .container-jobsGallery {
    max-width: 80rem;
  }
  #jobs-gallery .cs-content {
    text-align: left;
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;
  }
  #jobs-gallery .cs-title {
    margin: 0;
  }
  #jobs-gallery .cs-image {
    width: 31.8%;
    aspect-ratio: 1;
  }
}
/* Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
  #jobs-gallery .cs-flex {
    max-width: 34.375rem;
  }
  #jobs-gallery .cs-gallery {
    align-items: stretch;
    justify-content: center;
  }
  #jobs-gallery .cs-image {
    width: 39.375rem;
    max-width: 100%;
    height: 25rem;
  }
  #jobs-gallery .cs-image:nth-of-type(2),
  #jobs-gallery .cs-image:nth-of-type(3),
  #jobs-gallery .cs-image:nth-of-type(4),
  #jobs-gallery .cs-image:nth-of-type(5) {
    width: 19.0625rem;
  }
  #jobs-gallery .cs-image:nth-of-type(1) {
    /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
    transition-delay: 0.15s;
  }
  #jobs-gallery .cs-image:nth-of-type(2) {
    transition-delay: 0.3s;
  }
  #jobs-gallery .cs-image:nth-of-type(3) {
    transition-delay: 0.45s;
  }
  #jobs-gallery .cs-image:nth-of-type(4) {
    transition-delay: 0.15s;
  }
  #jobs-gallery .cs-image:nth-of-type(5) {
    transition-delay: 0.3s;
  }
  #jobs-gallery .cs-image:nth-of-type(6) {
    transition-delay: 0.45s;
  }
}

  </style>

  <script>
  class CS_GalleryFilter {
  filtersSelector: string = ".cs-button";
  galleriesSelector: string = ".cs-gallery";
  activeClass: string = "cs-active";
  hiddenClass: string = "cs-hidden";
  $galleries: NodeListOf<HTMLElement>;

  $activeFilter?: HTMLElement;

  constructor() {
    this.$galleries = document.querySelectorAll<HTMLElement>(this.galleriesSelector);
    const $filters = document.querySelectorAll<HTMLElement>(this.filtersSelector);

    this.onClick($filters[0]);

    $filters.forEach(($filter) => {
      $filter.addEventListener("click", () => this.onClick($filter));
    });
  }

  onClick($filter: HTMLElement) {
    this.filter($filter.dataset.filter);

    const { activeClass } = this;

    this.$activeFilter?.classList.remove(activeClass);
    $filter.classList.add(activeClass);

    this.$activeFilter = $filter;
  }

  filter(filter: string | undefined) {
    const showAll = filter == "all";
    const { hiddenClass } = this;

    for (const $gallery of this.$galleries) {
      const show = showAll || $gallery.dataset.category == filter;
      $gallery.classList.toggle(hiddenClass, !show);
    }
  }
}

new CS_GalleryFilter();

const videoContainer = document.querySelectorAll('picture');
videoContainer.forEach(container => {

  const video = container.querySelector('video');
const playButton = container.querySelector('.play-button');

playButton?.addEventListener('click', () => {
  if (video?.paused) {
    video.play();
  } else {
    video?.pause();
  }
});
});

  </script>